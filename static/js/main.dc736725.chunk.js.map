{"version":3,"sources":["components/MainView/redux.js","components/AddButton/index.js","components/AppContext/index.js","components/DoneElement/index.js","components/List/index.js","components/Snackbar/redux.js","components/Functions/index.js","components/ListElement/index.js","components/MainView/index.js","components/AddElement/index.js","components/TopMenu/index.js","components/CurrentDate/index.js","components/SideBar/index.js","components/Snackbar/index.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["ADD_ELEMENT_TO_LIST","SET_CONDITION_TO_FILTER_LIST","SET_CONDITION_DATE_TO_FILTER_LIST","SET_NEW_LIST_AFTER_REMOVING_ELEMENT","SET_AS_DONE","SET_FILTER_DATE","SHOW_ADD_ELEMENT_WINDOW","HIDE_ADD_ELEMENT_WINDOW","INIT_STATE","list","showAddElementWindow","filterCondition","filterConditionDate","id","doneList","isFilterDate","connect","state","dispatch","setAddElementWindowOnTrue","type","role","onClick","context","classess","app","listElement","doneListElement","addButton","container","topMenu","addElementWindow","sidebar","sidebarElement","snackbarInfo","snackbarDone","snackbar","info","done","categoryList","sidebarLinks","name","createContext","props","useContext","AppContext","description","date","category","className","taskList","filterConditions","useMemo","task","index","ListElement","element","DoneElement","newListAllElements","filter","undone","newListForCheckingCategory","map","newListForCheckingCategoryAndDate","FilterList","IS_ADDED_TRUE","IS_ADDED_FALSE","IS_DONE_TRUE","IS_DONE_FALSE","initialState","isAdded","isDone","useInput","init_val","useState","value","setValue","handleChange","e","target","returnTodayDate","Date","getFullYear","getMonth","getDate","elementsList","setNewList","newList","payload","addToDoneList","isDoneSetTrue","today","compareDates","targetID","parseInt","doneElement","newListWithoutDoneElements","undoneElements","amountOfListElements__Undone","length","amountOfListElements__Done","flags","TopMenu","List","Snackbar","showSnackbar","addedElement","setAddElementWindowOnFalse","addElementToList","isAddedSetOnTrue","todayDate","eventName","handleChangeEventName","choseDate","handleSelectChoseDate","handleSelectCategory","htmlFor","onChange","required","checked","Fragment","defaultChecked","CurrentDate","AddButton","dateCondition","isFilterDateSetOn","setting","condition","handleChangeDate","useEffect","console","log","checking","setCondition","setFilterCondition","innerText","link","hideSnackbar","snackbarMsg","msg","snackbarStyle","msgContent","setState","this","setTimeout","clearTimeout","Component","contextType","setAddElementWindow","setComponent","useCallback","flag","AddElement","MainView","Provider","SideBar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","action","Store","createStore","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc736725.chunk.js","sourcesContent":["const ADD_ELEMENT_TO_LIST = \"mainView/addElement\";\nconst SET_CONDITION_TO_FILTER_LIST = \"mainView/takeConditionToFilter\";\nconst SET_CONDITION_DATE_TO_FILTER_LIST = \"mainView/takeConditionDateToFilter\";\nconst SET_NEW_LIST_AFTER_REMOVING_ELEMENT = \"mainView/removeElement\";\nconst SET_AS_DONE = \"mainView/setDone\";\nconst SET_FILTER_DATE = \"mainview/settingFilterDate\";\nconst SHOW_ADD_ELEMENT_WINDOW = \"app/showAddElementWindow\";\nconst HIDE_ADD_ELEMENT_WINDOW = \"app/hideAddElementWindow\";\n\nexport const addElement = (payload) => ({ type: ADD_ELEMENT_TO_LIST, payload });\nexport const showAddElementWindow = () => ({ type: SHOW_ADD_ELEMENT_WINDOW });\nexport const hideAddElementWindow = () => ({ type: HIDE_ADD_ELEMENT_WINDOW });\nexport const takeConditionToFilter = (payload) => ({ type: SET_CONDITION_TO_FILTER_LIST, payload })\nexport const setNewList = (payload) => ({ type: SET_NEW_LIST_AFTER_REMOVING_ELEMENT, payload })\nexport const setAsDone = (payload) => ({ type: SET_AS_DONE, payload });\nexport const takeConditionDateToFilter = (payload) => ({ type: SET_CONDITION_DATE_TO_FILTER_LIST, payload });\nexport const setIsFilterDate = (payload) => ({ type: SET_FILTER_DATE, payload });\n\n\nconst INIT_STATE = {\n  list: [],\n  showAddElementWindow: false,\n  filterCondition: \"All\",\n  filterConditionDate: \"\",\n  id: 0,\n  doneList: [],\n  isFilterDate: false\n};\n\nexport default function listReducer(state = INIT_STATE, action) {\n  switch (action.type) {\n    case ADD_ELEMENT_TO_LIST:\n      return {\n        ...state,\n        list: [...state.list, { element: action.payload.element, date: action.payload.date, category: action.payload.category, id: state.id }],\n        showAddElementWindow: false,\n        id: state.id + 1\n      };\n    case SET_NEW_LIST_AFTER_REMOVING_ELEMENT:\n      return {\n        ...state,\n        list: action.payload\n      }\n    case SHOW_ADD_ELEMENT_WINDOW:\n      return {\n        ...state,\n        showAddElementWindow: true\n      };\n    case HIDE_ADD_ELEMENT_WINDOW:\n      return {\n        ...state,\n        showAddElementWindow: false\n      };\n    case SET_CONDITION_TO_FILTER_LIST:\n      return {\n        ...state,\n        filterCondition: action.payload\n      };\n    case SET_AS_DONE:\n      return {\n        ...state,\n        doneList: [...state.doneList, ...action.payload]\n      };\n    case SET_CONDITION_DATE_TO_FILTER_LIST: \n      return {\n        ...state,\n        filterConditionDate: action.payload\n      };\n    case SET_FILTER_DATE: \n      return {\n        ...state,\n        isFilterDate: action.payload\n      };\n    default:\n      return state;\n  };\n};","import { connect } from \"react-redux\";\nimport { showAddElementWindow } from '../MainView/redux';\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = (dispatch) => ({\n  setAddElementWindowOnTrue: () => dispatch(showAddElementWindow())\n});\n\nexport default connect\n  (mapStateToProps,\n    mapDispatchToProps)\n  (({ setAddElementWindowOnTrue }) => {\n    return (\n      <button role=\"button\" onClick={setAddElementWindowOnTrue}>Add Element</button>\n    )\n  });","import { createContext } from 'react';\n\nexport const context = {\n  classess: {\n    app: \"app\",\n    list: \"list\",\n    listElement: \"listElement\",\n    doneListElement: \"doneListElement\",\n    addButton: \"addButton\",\n    container: \"container\",\n    topMenu: \"topMenu\",\n    addElementWindow: \"addElementWindow\",\n    sidebar: \"sidebar\",\n    sidebarElement: \"sidebarElement\",\n    snackbarInfo: \"snackbar--info\",\n    snackbarDone: \"snackbar--done\",\n  },\n  snackbar: {\n    info: \"Position was added\",\n    done: \"Done!\",\n  },\n  categoryList: [\n    \"Home\",\n    \"Job\",\n    \"Tasks\",\n    \"Today\",\n    \"Urgent\",\n  ],\n  sidebarLinks: [\n    { name: \"All\" },\n    { name: \"Urgent\" },\n    { name: \"Home\" },\n    { name: \"Today\" },\n    { name: \"Job\" },\n    { name: \"Tasks\" },\n    { name: \"Done\" },\n  ]\n};\n\nexport default createContext(context);\n\n","import { useContext } from 'react';\nimport { AppContext } from '..';\n\n\nexport default (props) => {\n  const context = useContext(AppContext);\n\n  const { classess } = context;\n  const { list, doneListElement } = classess;\n\n  const {\n    description,\n    date,\n    category,\n    id\n  } = props;\n\n  return (\n    <li className={`${list}__${doneListElement}`}>\n      <span>{description}</span> <span>{date}</span> <span>{category}</span>\n    </li>\n  )\n}","import { connect } from \"react-redux\";\nimport { useContext, useCallback, useEffect, useMemo } from 'react';\n\nimport { ListElement } from '../';\nimport AppContext from \"../AppContext\";\nimport DoneElement from \"../DoneElement\";\n\nconst mapStateToProps = (state) => ({\n  taskList: state.list.list,\n  filterCondition: state.list.filterCondition,\n  doneList: state.list.doneList,\n  filterConditionDate: state.list.filterConditionDate,\n  isFilterDate: state.list.isFilterDate\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect\n  (mapStateToProps,\n    mapDispatchToProps)\n  ((props) => {\n\n    const {\n      taskList,\n      filterCondition,\n      doneList,\n      filterConditionDate,\n      isFilterDate\n    } = props;\n\n    const context = useContext(AppContext);\n\n    const { classess } = context;\n    const { list } = classess;\n\n    const FilterList = ({ taskList, doneList, filterCondition, filterConditionDate , isFilterDate}) => {\n      \n      const listElement = (task, index) => <ListElement key={`list--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />\n      const doneListElement = (task, index) => <DoneElement key={`doneList--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />\n\n      const newListAllElements = taskList.filter(undone => undone.done !== true);\n      const newListForCheckingCategory = (category) => taskList.filter(element => element.category === category).map((task, index) => listElement(task, index));\n      const newListForCheckingCategoryAndDate = (category) => taskList.filter(element => element.category === category).filter(element => element.date === filterConditionDate).map((task, index) => listElement(task, index));\n      switch (filterCondition) {\n        case \"All\":\n          if(isFilterDate) {\n            return newListAllElements.filter(undone => undone.date === filterConditionDate ).map((task, index) => listElement(task, index));\n          } \n          return newListAllElements.map((task, index) => listElement(task, index)); \n        case \"Urgent\":\n          if(isFilterDate) {\n            return newListForCheckingCategoryAndDate(\"Urgent\");\n          }\n          return newListForCheckingCategory(\"Urgent\");\n        case \"Home\":\n          if(isFilterDate) {\n            return newListForCheckingCategoryAndDate(\"Home\");\n          }\n          return newListForCheckingCategory(\"Home\");\n        case \"Today\":\n          if(isFilterDate) {\n            return newListForCheckingCategoryAndDate(\"Today\");\n          }\n          return newListForCheckingCategory(\"Today\");\n        case \"Job\":\n          if(isFilterDate) {\n            return newListForCheckingCategoryAndDate(\"Job\");\n          }\n          return newListForCheckingCategory(\"Job\");\n        case \"Tasks\":\n          if(isFilterDate) {\n            return newListForCheckingCategoryAndDate(\"Tasks\");\n          }\n          return newListForCheckingCategory(\"Tasks\");\n        case \"Done\":\n          if(isFilterDate) {\n            return doneList.filter(element => element.date === filterConditionDate).map((task, index) => doneListElement(task, index));\n          }\n          return doneList.map((task, index) => doneListElement(task, index));\n        default:\n          return taskList;\n      };\n    };\n\n    const filterConditions = useMemo(() => ({\n      taskList,\n      doneList,\n      filterCondition,\n      filterConditionDate,\n      isFilterDate\n    }), [taskList, filterCondition, doneList, filterConditionDate, isFilterDate]);\n\n    return (\n      <ul className={list}>\n        {\n          FilterList(filterConditions)\n        }\n      </ul>\n    )\n  })","const IS_ADDED_TRUE = \"snackbar/elementAdded_true\";\nconst IS_ADDED_FALSE = \"snackbar/elementAdded_false\";\nconst IS_DONE_TRUE = \"snackbar/elementDone_true\";\nconst IS_DONE_FALSE = \"snackbar/elementDone_false\";\n\nexport const isAddedTrue = () => ({ type: IS_ADDED_TRUE });\nexport const isAddedFalse = () => ({ type: IS_ADDED_FALSE });\nexport const isDoneTrue = () => ({ type: IS_DONE_TRUE });\nexport const isDoneFalse = () => ({ type: IS_DONE_FALSE });\n\nconst initialState = {\n  isAdded: false,\n  isDone: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case IS_ADDED_TRUE:\n      return {\n        isAdded: true,\n      };\n    case IS_ADDED_FALSE:\n      return {\n        isAdded: false,\n      };\n    case IS_DONE_TRUE:\n      return {\n        isDone: true\n      };\n    case IS_DONE_FALSE:\n      return {\n        isDone: false\n      };\n    default:\n      return state;\n  }\n}","import { useState } from 'react';\n\nexport const useInput = (init_val = \"\") => {\n  const [value, setValue] = useState(init_val);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return [value, handleChange];\n};\n\nexport const returnTodayDate = () => {\n  const date = new Date();\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n}","import { useContext } from 'react';\nimport { connect } from 'react-redux';\n\nimport { AppContext } from '..';\nimport { setNewList, setAsDone } from '../MainView/redux';\nimport { isDoneTrue } from '../Snackbar/redux';\n\nimport { VscCheck, VscChromeClose } from 'react-icons/vsc';\nimport { returnTodayDate } from '../Functions';\n\nconst mapStateToProps = (state) => ({\n  elementsList: state.list.list\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setNewList: (newList) => dispatch(setNewList(newList)),\n  addToDoneList: (doneList) => dispatch(setAsDone(doneList)),\n  isDoneSetTrue: () => dispatch(isDoneTrue())\n});\n\nexport default connect\n  (mapStateToProps,\n    mapDispatchToProps)\n  ((props) => {\n    const {\n      description,\n      date,\n      category,\n      id,\n      elementsList,\n      setNewList,\n      addToDoneList,\n      isDoneSetTrue\n    } = props;\n\n    const context = useContext(AppContext);\n\n    const { classess } = context;\n    const { list, listElement } = classess;\n\n    const deleteElement = (e) => {\n      const id = parseInt(e.target.id);\n\n      const newList = elementsList.filter(element => element.id !== id);\n      setNewList(newList);\n    };\n\n    const handleSelect = (e) => {\n      const targetID = parseInt(e.target.id);\n\n      const doneList = elementsList.filter(doneElement => doneElement.id === targetID);\n      addToDoneList(doneList);\n\n      const newListWithoutDoneElements = elementsList.filter(undoneElements => undoneElements.id !== targetID);\n      setNewList(newListWithoutDoneElements);\n\n      isDoneSetTrue();\n    };\n\n    const compareDates = () => {\n      const today = returnTodayDate();\n      if(today===date) return \"Equal\";\n      if(today>date) return \"Less\";\n      return \"More\";\n    };\n\n    return (\n      <li className={`${list}--${listElement}`}>\n        <div className={`${list}--${listElement}__details`}>\n          <span>{description}</span> <span className={`comparedDates--${compareDates()}`}>{date}</span> <span>{category}</span>\n        </div>\n        <div>\n          <VscCheck id={id} onClick={handleSelect} />\n          <VscChromeClose id={id} onClick={deleteElement} />\n        </div>\n      </li>\n    )\n  });","import { useContext } from 'react';\nimport { connect } from 'react-redux';\n\nimport { AppContext, TopMenu, List, Snackbar } from '..';\n\nconst mapStateToProps = (state) => ({\n  amountOfListElements__Undone: state.list.list.length,\n  amountOfListElements__Done: state.list.doneList.length,\n  isAdded: state.flags.isAdded,\n  isDone: state.flags.isDone,\n});\nconst mapDispatchToProps = () => ({});\n\nexport default connect\n  (mapStateToProps,\n    mapDispatchToProps)\n  ((props) => {\n    const {\n      amountOfListElements__Undone,\n      amountOfListElements__Done,\n      isAdded,\n      isDone\n    } = props;\n\n    const context = useContext(AppContext);\n    const { classess } = context;\n\n    const showList = () => {\n      if (amountOfListElements__Undone || amountOfListElements__Done) return <List />\n      return null;\n    };\n\n    const showSnackbar = () => {\n      if(isAdded || isDone) return <div className={`${classess.container}--snackbarContainer`}><Snackbar /></div>\n    };\n\n    return (\n      <div className={classess.container}>\n        <TopMenu />\n        {showList()}\n        {showSnackbar()}\n      </div>\n    )\n  })","import React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppContext } from \"..\";\n\nimport { useInput, returnTodayDate } from '../Functions';\nimport { hideAddElementWindow, addElement } from '../MainView/redux';\nimport { isAddedTrue } from '../Snackbar/redux';\n\nconst mapStateToProps = (state) => ({\n  addedElement: state.list.list\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setAddElementWindowOnFalse: () => dispatch(hideAddElementWindow()),\n  addElementToList: ({ element, date, category }) => dispatch(addElement({ element, date, category })),\n  isAddedSetOnTrue: () => dispatch(isAddedTrue())\n});\n\nexport default connect\n  (mapStateToProps,\n    mapDispatchToProps)\n  ((props) => {\n    const context = useContext(AppContext);\n    const { classess, categoryList } = context;\n    const { addElementWindow } = classess;\n\n\n    const todayDate = returnTodayDate();\n\n    const [eventName, handleChangeEventName] = useInput();\n    const [choseDate, handleSelectChoseDate] = useInput(todayDate);\n    const [category, handleSelectCategory] = useInput(categoryList[0]);\n\n    const {\n      setAddElementWindowOnFalse,\n      addElementToList,\n      isAddedSetOnTrue,\n    } = props;\n\n    const sendData = () => {\n      addElementToList({ element: eventName, date: choseDate, category });\n      isAddedSetOnTrue();\n    };\n\n    return (\n      <div className={addElementWindow}>\n        <div><button onClick={setAddElementWindowOnFalse} className={`${addElementWindow}__closeBtn`}>&times;</button></div>\n\n        <form className={`${addElementWindow}__form`}>\n\n          <label htmlFor=\"eventName\">Name</label>\n          <input id=\"eventName\" type=\"text\" value={eventName} onChange={handleChangeEventName} required />\n\n          <label htmlFor=\"date\">Date</label>\n          <input id=\"date\" type=\"date\" value={choseDate} onChange={handleSelectChoseDate} required checked />\n\n          <fieldset onChange={handleSelectCategory}>\n            <legend>Category</legend>\n\n            <div>\n              {categoryList.map((category, index) => {\n                if (index === 0) {\n                  return (\n                    <React.Fragment key={`radio--element--${index}`}>\n                      <label htmlFor={category}>{category}</label>\n                      <input type=\"radio\" id={category} name=\"category\" value={category} defaultChecked />\n                    </React.Fragment>\n                  )\n                } else {\n                  return (\n                    <React.Fragment key={`radio--element--${index}`}>\n                      <label htmlFor={category}>{category}</label>\n                      <input type=\"radio\" id={category} name=\"category\" value={category} />\n                    </React.Fragment>\n                  )\n                }\n              })}\n\n            </div>\n\n          </fieldset>\n        </form>\n\n        <div><button className={`${addElementWindow}__form__addBtn`} onClick={sendData}>Add</button></div>\n      </div>\n    )\n  })","import React, { useContext } from \"react\";\nimport { AddButton, AppContext, CurrentDate } from \"..\";\n\nexport default () => {\n  const context = useContext(AppContext);\n\n  const { classess } = context;\n  const { topMenu } = classess;\n\n  return (\n    <nav className={topMenu}>\n      <CurrentDate />\n      <AddButton />\n    </nav>\n  )\n}","import { useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\n\n\nimport { useInput, returnTodayDate } from '../Functions';\nimport { takeConditionDateToFilter, setIsFilterDate } from '../MainView/redux';\nimport AppContext from '../AppContext/index';\n\nconst mapStateToProps = (state) => ({\n});\nconst mapDispatchToProps = (dispatch) => ({\n  dateCondition: (date) => dispatch(takeConditionDateToFilter(date)),\n  isFilterDateSetOn: (setting) => dispatch(setIsFilterDate(setting))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(({ dateCondition, condition, isFilterDateSetOn, isFilterDate }) => {\n\n  const context = useContext(AppContext);\n  const { classess } = context;\n  const { container } = classess;\n\n  const todayDate = returnTodayDate();\n\n  const [ date, handleChangeDate ] = useInput(todayDate);\n\n  useEffect(() => {\n    console.log();\n    dateCondition(date);\n  }, [date, dateCondition, condition]);\n\n  const checkingCheckbox = (e) => {\n    isFilterDateSetOn(e.target.checked);\n  }\n\n  return (\n    <div className={container}>\n      <input type=\"date\" value={date} onChange={handleChangeDate} />\n      <input type=\"checkbox\" onChange={checkingCheckbox}/>\n    </div>\n  )\n});","import React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { takeConditionToFilter } from '../MainView/redux';\n\nimport { AppContext } from \"..\";\n\nconst mapStateToProps = (state) => ({\n  checking: state.list.filterCondition\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setCondition: (condition) => dispatch(takeConditionToFilter(condition))\n});\n\nexport default connect\n  (mapStateToProps, mapDispatchToProps)\n  (({ setCondition }) => {\n\n    const context = useContext(AppContext);\n    const { sidebarLinks, classess } = context;\n    const { sidebar, sidebarElement } = classess;\n\n    const setFilterCondition = (e) => {\n      setCondition(e.target.innerText);\n    }\n\n    return (\n      <nav className={sidebar}>\n        <div>\n          <ul>\n            {sidebarLinks.map((link, index) => (\n              <li key={`sidebar--links--${index}`}>\n                <a onClick={setFilterCondition} className={`${sidebar}__${sidebarElement}`}>{link.name}</a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </nav>\n    )\n  });","import React, { Component } from \"react\";\nimport AppContext from \"../AppContext\";\nimport { connect } from 'react-redux';\nimport { isAddedFalse, isDoneFalse } from './redux';\n\nimport '../../styles/__snackbar.scss';\n\nconst mapStateToProps = (state) => ({\n  isAdded: state.flags.isAdded,\n  isDone: state.flags.isDone\n});\nconst mapDispatchToProps = (dispatch) => ({\n  hideSnackbar: () => {\n    dispatch(isAddedFalse());\n    dispatch(isDoneFalse());\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(class extends Component {\n    static contextType = AppContext;\n\n    snackbarMsg = this.context.snackbar;\n    classess = this.context.classess;\n\n    state = {\n      msg: null,\n      snackbarStyle: null,\n    };\n  \n    msgContent = () => {\n      if(this.props.isAdded) this.setState({ msg: this.snackbarMsg.info, snackbarStyle: this.classess.snackbarInfo });\n      if(this.props.isDone) this.setState({ msg: this.snackbarMsg.done, snackbarStyle: this.classess.snackbarDone });\n    };\n\n    componentDidMount() {\n      this.msgContent();\n      setTimeout(() => {\n        this.props.hideSnackbar();\n      }, 3000);\n    };\n\n    componentWillUnmount() {\n      clearTimeout();\n    };\n  \n    render() {\n      const { msg, snackbarStyle } = this.state;\n\n      return (\n        <div className={snackbarStyle}>\n          <span>{msg}</span>\n        </div>\n      );\n    }\n  }\n);","import { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { AddElement, AppContext, MainView, SideBar } from './components';\nimport { context } from './components/AppContext';\n\nimport \"./styles/index.scss\";\n\nfunction App({ setAddElementWindow }) {\n\n  const setComponent = useCallback(\n    (flag = false) => {\n      if (flag) return <AddElement />\n      return <MainView />\n    },\n    [setAddElementWindow],\n  )\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={context}>\n          <SideBar />\n          {\n            setComponent(setAddElementWindow)\n          }\n      </AppContext.Provider>\n    </div >\n\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  setAddElementWindow: state.list.showAddElementWindow\n});\n\nconst mapDispatchToProps = () => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux';\n\nimport listReducer from './components/MainView/redux';\nimport flagsReducer from './components/Snackbar/redux';\n\nexport const rootReducers = combineReducers({\n  list: listReducer,\n  flags: flagsReducer\n})\n\nconst Store = createStore(rootReducers);\n\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport Store from './store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}