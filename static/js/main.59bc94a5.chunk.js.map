{"version":3,"sources":["components/MainView/redux.js","components/AddButton/index.js","components/AppContext/index.js","components/DoneElement/index.js","components/List/index.js","components/ListElement/index.js","components/MainView/index.js","components/Functions/index.js","components/AddElement/index.js","components/TopMenu/index.js","components/CurrentDate/index.js","components/SideBar/index.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["ADD_ELEMENT_TO_LIST","SHOW_ADD_ELEMENT_WINDOW","HIDE_ADD_ELEMENT_WINDOW","SET_CONDITION_TO_FILTER_LIST","SET_NEW_LIST_AFTER_REMOVING_ELEMENT","SET_AS_DONE","INIT_STATE","list","showAddElementWindow","filterCondition","id","doneList","connect","state","dispatch","setAddElementWindowOnTrue","type","role","onClick","context","classess","app","listElement","doneListElement","addButton","container","topMenu","addElementWindow","sidebar","sidebarElement","categoryList","sidebarLinks","name","AppContext","createContext","props","useContext","description","date","category","className","taskList","FilterList","useCallback","unfilteredList","filter","undone","done","map","task","index","ListElement","element","DoneElement","console","log","elementsList","setNewList","newList","payload","addToDoneList","e","targetID","parseInt","target","doneElement","newListWithoutDoneElements","undoneElements","amountOfListElements","length","TopMenu","List","useInput","init_val","useState","value","setValue","handleChange","addedElement","setAddElementWindowOnFalse","addElementToList","eventName","handleChangeEventName","choseDate","handleSelectChoseDate","handleSelectCategory","htmlFor","onChange","required","Fragment","checked","CurrentDate","AddButton","todayDate","Date","getDate","getMonth","getFullYear","returnTodayDate","checking","setCondition","condition","setFilterCondition","innerText","link","setAddElementWindow","setComponent","flag","AddElement","MainView","Provider","SideBar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","action","Store","createStore","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59bc94a5.chunk.js","sourcesContent":["const ADD_ELEMENT_TO_LIST = \"mainView/addElement\";\r\nconst SHOW_ADD_ELEMENT_WINDOW = \"app/showAddElementWindow\";\r\nconst HIDE_ADD_ELEMENT_WINDOW = \"app/hideAddElementWindow\";\r\nconst SET_CONDITION_TO_FILTER_LIST = \"mainView/takeConditionToFilter\";\r\nconst SET_NEW_LIST_AFTER_REMOVING_ELEMENT = \"mainView/removeElement\";\r\nconst SET_AS_DONE = \"mainView/setDone\";\r\n\r\nexport const addElement = (payload) => ({ type: ADD_ELEMENT_TO_LIST, payload });\r\nexport const showAddElementWindow = () => ({ type: SHOW_ADD_ELEMENT_WINDOW });\r\nexport const hideAddElementWindow = () => ({ type: HIDE_ADD_ELEMENT_WINDOW });\r\nexport const takeConditionToFilter = (payload) => ({ type: SET_CONDITION_TO_FILTER_LIST, payload })\r\nexport const setNewList = (payload) => ({ type: SET_NEW_LIST_AFTER_REMOVING_ELEMENT, payload })\r\nexport const setAsDone = (payload) => ({ type: SET_AS_DONE, payload });\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  showAddElementWindow: false,\r\n  filterCondition: \"All\",\r\n  id: 0,\r\n  doneList: []\r\n};\r\n\r\nexport default function listReducer(state = INIT_STATE, action) {\r\n  switch (action.type) {\r\n    case ADD_ELEMENT_TO_LIST:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, { element: action.payload.element, date: action.payload.date, category: action.payload.category, id: state.id }],\r\n        showAddElementWindow: false,\r\n        id: state.id + 1\r\n      };\r\n    case SET_NEW_LIST_AFTER_REMOVING_ELEMENT:\r\n      return {\r\n        ...state,\r\n        list: action.payload\r\n      }\r\n    case SHOW_ADD_ELEMENT_WINDOW:\r\n      return {\r\n        ...state,\r\n        showAddElementWindow: true\r\n      };\r\n    case HIDE_ADD_ELEMENT_WINDOW:\r\n      return {\r\n        ...state,\r\n        showAddElementWindow: false\r\n      };\r\n    case SET_CONDITION_TO_FILTER_LIST:\r\n      return {\r\n        ...state,\r\n        filterCondition: action.payload\r\n      };\r\n    case SET_AS_DONE:\r\n      return {\r\n        ...state,\r\n        doneList: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  };\r\n};","import { connect } from \"react-redux\";\r\nimport { showAddElementWindow } from '../MainView/redux';\r\n\r\nconst mapStateToProps = (state) => ({});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setAddElementWindowOnTrue: () => dispatch(showAddElementWindow())\r\n});\r\n\r\nexport default connect\r\n  (mapStateToProps,\r\n    mapDispatchToProps)\r\n  (({ setAddElementWindowOnTrue }) => {\r\n    return (\r\n      <button role=\"button\" onClick={setAddElementWindowOnTrue}>Add Element</button>\r\n    )\r\n  });","import { createContext } from 'react';\r\n\r\nexport const context = {\r\n  classess: {\r\n    app: \"app\",\r\n    list: \"list\",\r\n    listElement: \"listElement\",\r\n    doneListElement: \"doneListElement\",\r\n    addButton: \"addButton\",\r\n    container: \"container\",\r\n    topMenu: \"topMenu\",\r\n    addElementWindow: \"addElementWindow\",\r\n    sidebar: \"sidebar\",\r\n    sidebarElement: \"sidebarElement\"\r\n  },\r\n  categoryList: [\r\n    \"Home\",\r\n    \"Job\",\r\n    \"Tasks\",\r\n    \"Today\",\r\n    \"Urgent\",\r\n    \"Done\"\r\n  ],\r\n  sidebarLinks: [\r\n    { name: \"All\" },\r\n    { name: \"Urgent\" },\r\n    { name: \"Home\" },\r\n    { name: \"Today\" },\r\n    { name: \"Job\" },\r\n    { name: \"Tasks\" },\r\n    { name: \"Done\" },\r\n  ]\r\n};\r\n\r\nconst AppContext = createContext(context);\r\nexport default AppContext;\r\n","import { useContext } from 'react';\r\nimport { AppContext } from '..';\r\n\r\n\r\nexport default (props) => {\r\n  const context = useContext(AppContext);\r\n\r\n  const { classess } = context;\r\n  const { list, doneListElement } = classess;\r\n\r\n  const {\r\n    description,\r\n    date,\r\n    category,\r\n    id\r\n  } = props;\r\n\r\n  return (\r\n    <li className={`${list}__${doneListElement}`}>\r\n      <span>{description}</span> <span>{date}</span> <span>{category}</span>\r\n    </li>\r\n  )\r\n}","import { connect } from \"react-redux\";\r\nimport { useContext, useCallback } from 'react';\r\n\r\nimport { ListElement } from '../';\r\nimport AppContext from \"../AppContext\";\r\nimport DoneElement from \"../DoneElement\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  taskList: state.list.list,\r\n  filterCondition: state.list.filterCondition,\r\n  doneList: state.list.doneList\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect\r\n  (mapStateToProps,\r\n    mapDispatchToProps)\r\n  (({ taskList, filterCondition, doneList }) => {\r\n    const context = useContext(AppContext);\r\n\r\n    const { classess } = context;\r\n    const { list } = classess;\r\n\r\n    const FilterList = useCallback(\r\n      (list, filterCondition) => {\r\n        const unfilteredList = list;\r\n\r\n        switch (filterCondition) {\r\n          case \"All\":\r\n            return unfilteredList.filter(undone => undone.done !== true).map((task, index) => (<ListElement key={`list--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />));;\r\n          case \"Urgent\":\r\n            return unfilteredList.filter((element) => element.category === \"Urgent\").map((task, index) => (<ListElement key={`list--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />));\r\n          case \"Home\":\r\n            return unfilteredList.filter((element) => element.category === \"Home\").map((task, index) => (<ListElement key={`list--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />));\r\n          case \"Today\":\r\n            return unfilteredList.filter((element) => element.category === \"Today\").map((task, index) => (<ListElement key={`list--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />));\r\n          case \"Job\":\r\n            return unfilteredList.filter((element) => element.category === \"Job\").map((task, index) => (<ListElement key={`list--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />));\r\n          case \"Tasks\":\r\n            return unfilteredList.filter((element) => element.category === \"Tasks\").map((task, index) => (<ListElement key={`list--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />));\r\n          case \"Done\":\r\n            return doneList.map((task, index) => (<DoneElement key={`doneList--element--${index}`} description={task.element} date={task.date} category={task.category} id={task.id} />));\r\n          default:\r\n            return unfilteredList\r\n        }\r\n      },\r\n      [taskList, filterCondition],\r\n    )\r\n\r\n    console.log(doneList);\r\n\r\n    return (\r\n      <ul className={list}>\r\n        {\r\n          FilterList(taskList, filterCondition)\r\n        }\r\n      </ul>\r\n    )\r\n  })","import { useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppContext } from '..';\r\nimport { setNewList, setAsDone } from '../MainView/redux';\r\n\r\nimport { GiCheckMark } from 'react-icons/gi';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  elementsList: state.list.list\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setNewList: (newList) => dispatch(setNewList(newList)),\r\n  addToDoneList: (doneList) => dispatch(setAsDone(doneList))\r\n});\r\n\r\nexport default connect\r\n  (mapStateToProps,\r\n    mapDispatchToProps)\r\n  (({ description, date, category, id, elementsList, setNewList, addToDoneList }) => {\r\n\r\n    const context = useContext(AppContext);\r\n\r\n    const { classess } = context;\r\n    const { list, listElement } = classess;\r\n\r\n    const deleteElement = (e) => {\r\n      const id = parseInt(e.target.id);\r\n\r\n      const newList = elementsList.filter(element => element.id !== id);\r\n\r\n      setNewList(newList);\r\n    };\r\n\r\n    const handleSelect = (e) => {\r\n      const targetID = parseInt(e.target.id);\r\n\r\n      const doneList = elementsList.filter(doneElement => doneElement.id === targetID);\r\n      addToDoneList(doneList);\r\n\r\n      const newListWithoutDoneElements = elementsList.filter(undoneElements => undoneElements.id !== targetID);\r\n      setNewList(newListWithoutDoneElements);\r\n    }\r\n\r\n    return (\r\n      <li className={`${list}__${listElement}`}>\r\n        <div>\r\n          <span>{description}</span> <span>{date}</span> <span>{category}</span>\r\n        </div>\r\n        <div>\r\n          <button id={id} onClick={handleSelect} ><GiCheckMark /></button>\r\n          <button id={id} onClick={deleteElement}>&times;</button>\r\n        </div>\r\n      </li>\r\n    )\r\n  });","import { useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppContext, TopMenu, List } from '..';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  amountOfListElements: state.list.list.length\r\n});\r\nconst mapDispatchToProps = () => ({});\r\n\r\nexport default connect\r\n  (mapStateToProps,\r\n    mapDispatchToProps)\r\n  (({ amountOfListElements }) => {\r\n    const context = useContext(AppContext);\r\n    const { classess } = context;\r\n\r\n    const showList = () => {\r\n      if (amountOfListElements) return <List />\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <div className={classess.container}>\r\n        <TopMenu />\r\n        {showList()}\r\n      </div>\r\n    )\r\n  })","import { useState } from 'react';\r\n\r\nexport const useInput = (init_val = \"\") => {\r\n  const [value, setValue] = useState(init_val);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return [value, handleChange];\r\n};\r\n\r\nexport const returnTodayDate = () => {\r\n  const date = new Date();\r\n  return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`;\r\n}","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppContext } from \"..\";\r\n\r\nimport { useInput } from '../Functions';\r\nimport { hideAddElementWindow, addElement } from '../MainView/redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  addedElement: state.list.list\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setAddElementWindowOnFalse: () => dispatch(hideAddElementWindow()),\r\n  addElementToList: ({ element, date, category }) => dispatch(addElement({ element, date, category }))\r\n});\r\n\r\nexport default connect\r\n  (mapStateToProps,\r\n    mapDispatchToProps)\r\n  (({ setAddElementWindowOnFalse, addElementToList }) => {\r\n    const context = useContext(AppContext);\r\n\r\n    const [eventName, handleChangeEventName] = useInput();\r\n    const [choseDate, handleSelectChoseDate] = useInput();\r\n    const [category, handleSelectCategory] = useInput();\r\n\r\n    const { classess, categoryList } = context;\r\n    const { addElementWindow } = classess;\r\n\r\n    const sendData = () => {\r\n      addElementToList({ element: eventName, date: choseDate, category });\r\n    };\r\n\r\n    return (\r\n      <div className={addElementWindow}>\r\n        <div><button onClick={setAddElementWindowOnFalse} className={`${addElementWindow}__closeBtn`}>&times;</button></div>\r\n\r\n        <div className={`${addElementWindow}__form`}>\r\n\r\n          <label htmlFor=\"eventName\">Name</label>\r\n          <input id=\"eventName\" type=\"text\" value={eventName} onChange={handleChangeEventName} required />\r\n\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input id=\"date\" type=\"date\" value={choseDate} onChange={handleSelectChoseDate} required />\r\n\r\n          <fieldset onChange={handleSelectCategory}>\r\n            <legend>Category</legend>\r\n\r\n            <div>\r\n              {categoryList.map((category, index) => {\r\n                if (index === 0) {\r\n                  return (\r\n                    <React.Fragment key={`radio--element--${index}`}>\r\n                      <label htmlFor={category}>{category}</label>\r\n                      <input type=\"radio\" id={category} name=\"category\" value={category} checked />\r\n                    </React.Fragment>\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <React.Fragment key={`radio--element--${index}`}>\r\n                      <label htmlFor={category}>{category}</label>\r\n                      <input type=\"radio\" id={category} name=\"category\" value={category} />\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n              })}\r\n\r\n            </div>\r\n\r\n          </fieldset>\r\n        </div>\r\n\r\n        <div><button role=\"button\" onClick={sendData}>Add</button></div>\r\n      </div>\r\n    )\r\n  })","import React, { useContext } from \"react\";\r\nimport { AddButton, AppContext, CurrentDate } from \"..\";\r\n\r\nexport default () => {\r\n  const context = useContext(AppContext);\r\n\r\n  const { classess } = context;\r\n  const { topMenu } = classess;\r\n\r\n  return (\r\n    <nav className={topMenu}>\r\n      <CurrentDate />\r\n      <AddButton />\r\n    </nav>\r\n  )\r\n}","import { returnTodayDate } from '../Functions';\r\n\r\nexport default () => {\r\n\r\n  const todayDate = returnTodayDate();\r\n\r\n  return (\r\n    <span>Today: {todayDate}</span>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { takeConditionToFilter } from '../MainView/redux';\r\n\r\nimport { AppContext } from \"..\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  checking: state.list.filterCondition\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCondition: (condition) => dispatch(takeConditionToFilter(condition))\r\n});\r\n\r\nexport default connect\r\n  (mapStateToProps, mapDispatchToProps)\r\n  (({ setCondition, checking }) => {\r\n\r\n    const context = useContext(AppContext);\r\n    const { sidebarLinks, classess } = context;\r\n    const { sidebar, sidebarElement } = classess;\r\n\r\n    const setFilterCondition = (e) => {\r\n      setCondition(e.target.innerText);\r\n    }\r\n\r\n    return (\r\n      <nav className={sidebar}>\r\n        <div>\r\n          <ul>\r\n            {sidebarLinks.map((link, index) => (\r\n              <li key={`sidebar--links--${index}`}>\r\n                <a onClick={setFilterCondition} className={`${sidebar}__${sidebarElement}`}>{link.name}</a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n  });","import { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { AddElement, AppContext, MainView, SideBar } from './components';\nimport { context } from './components/AppContext';\n\nimport \"./styles/index.scss\";\n\nfunction App({ setAddElementWindow }) {\n\n  const setComponent = useCallback(\n    (flag = false) => {\n      if (flag) return <AddElement />\n      return <MainView />\n    },\n    [setAddElementWindow],\n  )\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={context}>\n        <SideBar />\n        {\n          setComponent(setAddElementWindow)\n        }\n      </AppContext.Provider>\n    </div >\n\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  setAddElementWindow: state.list.showAddElementWindow\n});\n\nconst mapDispatchToProps = () => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux';\r\n\r\nimport listReducer from './components/MainView/redux';\r\n\r\nexport const rootReducers = combineReducers({\r\n  list: listReducer\r\n})\r\n\r\nconst Store = createStore(rootReducers);\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport Store from './store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}